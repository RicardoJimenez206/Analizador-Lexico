/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package analizadorlexico.Interfaz;
import com.jtattoo.plaf.acryl.AcrylLookAndFeel;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author Rikyj
 */
public class Analizardor extends javax.swing.JFrame {
    
    /**
     * Creates new form Analizardor
     */
    public Analizardor() {
        initComponents();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        TextArea = new javax.swing.JTextField();
        analizarButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        resultadosTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        analizarButton.setText("Analizar");
        analizarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                analizarButtonActionPerformed(evt);
            }
        });

        resultadosTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Tipo", "Tokens"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(resultadosTable);

        jLabel1.setFont(new java.awt.Font("SimSun", 0, 12)); // NOI18N
        jLabel1.setText("Ingrese una expresion matematica");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(TextArea))
                .addGap(18, 18, 18)
                .addComponent(analizarButton)
                .addGap(12, 12, 12)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(15, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(analizarButton)
                            .addComponent(TextArea, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void analizarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_analizarButtonActionPerformed
        // TODO add your handling code here:
        
        String expresion = TextArea.getText();
        Pattern patron = Pattern.compile("([a-zA-Z]+|[0-9]|pi|e|\\+|\\-|\\*|\\/|\\(|\\)|\\^)");
        Matcher matcher = patron.matcher(expresion);

        DefaultTableModel modelo = (DefaultTableModel) resultadosTable.getModel();

        int[] contadores = new int[5];

        while (matcher.find()) {
            String token = matcher.group();
            String tipo;

        if (token.matches("[w,x,y,z]+")) {
                tipo = "Variable";
            } else if (token.matches("pi|e")) {
                tipo = "Constante";
            } else if (token.matches("[0-9]")) {
                tipo = "Número";
            } else if (token.matches("\\+|\\-|\\*|\\/|\\^|\\(|\\)")) {
                tipo = "Operador";
            } else {
                tipo = "Desconocido";
            }

        int index;

        index = switch (tipo) {
                case "Variable" -> 0;
                case "Constante" -> 1;
                case "Número" -> 2;
                case "Operador" -> 3;
                default -> 4;
            };

            modelo.addRow(new Object[]{tipo, token});
            contadores[index]++;
            }

        StringBuilder message = new StringBuilder("Lexico:\n");
        String[] categorias = {"Variables", "Constantes", "Números", "Operadores", "Desconocidos"};

            for (int i = 0; i < 5; i++) {
                message.append(categorias[i]).append(": ").append(contadores[i]).append("\n");
    }

        JOptionPane.showMessageDialog(this, message.toString());

    }//GEN-LAST:event_analizarButtonActionPerformed

    /**
     * @param args the command line arguments
     */
public static void main(String args[]) {
    try {
        UIManager.setLookAndFeel(new AcrylLookAndFeel());

        java.awt.EventQueue.invokeLater(() -> {
            new Analizardor().setVisible(true);
        });
    } catch (UnsupportedLookAndFeelException e) {
    }
}


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField TextArea;
    private javax.swing.JButton analizarButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable resultadosTable;
    // End of variables declaration//GEN-END:variables

}
